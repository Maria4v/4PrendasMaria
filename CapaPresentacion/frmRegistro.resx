<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImprimir.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        guwOWQAAAABJRU5ErkJggg==
</value>
  </data>
</root>